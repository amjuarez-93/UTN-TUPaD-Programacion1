{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4948eafd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eres mayor de edad.\n"
     ]
    }
   ],
   "source": [
    "#1) Escribir un programa que solicite la edad del usuario. Si el usuario es mayor de 18 años, deberá mostrar un mensaje en pantalla que diga “Es mayor de edad”.\n",
    "\n",
    "edad=int(input(\"Ingrese su edad: \"))\n",
    "if edad >= 18:\n",
    "    print(\"Eres mayor de edad.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "527802f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#2) Escribir un programa que solicite su nota al usuario. Si la nota es mayor o igual a 6, deberá mostrar por pantalla un mensaje que diga “Aprobado”; en caso contrario deberá mostrar el mensaje “Desaprobado”.\n",
    "\n",
    "nota = float(input(\"Ingrese su nota: \"))\n",
    "if nota >= 6:\n",
    "    print(\"Aprobado\")\n",
    "else:\n",
    "    print(\"Desaprobado\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68b7b76c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Por favor, ingrese un número par\n"
     ]
    }
   ],
   "source": [
    "#3) Escribir un programa que permita ingresar solo números pares. Si el usuario ingresa un número par, imprimir por en pantalla el mensaje \"Ha ingresado un número par\"; en caso contrario, imprimir por pantalla \"Por favor, ingrese un número par\".\n",
    "\n",
    "num1= int(input(\"Ingrese un número par: \"))\n",
    "\n",
    "if num1 % 2 == 0:\n",
    "    print(\"Ha ingresado un número par\")\n",
    "else:\n",
    "    print(\"Por favor, ingrese un número par\")    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "53aa8645",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adulto/a\n"
     ]
    }
   ],
   "source": [
    "# 4) Clasificación por edad\n",
    "\n",
    "edad = int(input(\"Ingrese su edad: \"))\n",
    "if edad < 12:\n",
    "    print(\"Niño/a\")\n",
    "elif edad < 18:\n",
    "    print(\"Adolescente\")\n",
    "elif edad < 30:\n",
    "    print(\"Adulto/a joven\")\n",
    "else:\n",
    "    print(\"Adulto/a\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dadd13f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ha ingresado una contraseña correcta\n"
     ]
    }
   ],
   "source": [
    "# 5) Validación de longitud de contraseña\n",
    "\n",
    "contraseña = input(\"Ingrese una contraseña (8 a 14 caracteres): \")\n",
    "if 8 <= len(contraseña) <= 14:\n",
    "    print(\"Ha ingresado una contraseña correcta\")\n",
    "else:\n",
    "    print(\"Por favor, ingrese una contraseña de entre 8 y 14 caracteres\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "301fe048",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Lista de números: [62, 39, 65, 64, 6, 33, 79, 55, 53, 19, 98, 95, 56, 98, 95, 49, 10, 49, 11, 77, 21, 42, 50, 46, 4, 71, 43, 91, 67, 11, 58, 16, 99, 65, 31, 85, 4, 90, 94, 30, 66, 92, 83, 80, 70, 88, 71, 35, 39, 27]\n",
      "Media: 55.64\n",
      "Mediana: 57.0\n",
      "Moda: 39\n",
      "No se puede determinar un sesgo claro\n"
     ]
    }
   ],
   "source": [
    "# 6) Análisis de sesgo en lista de números aleatorios\n",
    "\n",
    "import random\n",
    "from statistics import mean, median, mode\n",
    "\n",
    "numeros_aleatorios = [random.randint(1, 100) for _ in range(50)]\n",
    "media = mean(numeros_aleatorios)\n",
    "mediana = median(numeros_aleatorios)\n",
    "moda = mode(numeros_aleatorios)\n",
    "\n",
    "print(\"\\nLista de números:\", numeros_aleatorios)\n",
    "print(\"Media:\", media)\n",
    "print(\"Mediana:\", mediana)\n",
    "print(\"Moda:\", moda)\n",
    "\n",
    "if media > mediana > moda:\n",
    "    print(\"Sesgo positivo (a la derecha)\")\n",
    "elif media < mediana < moda:\n",
    "    print(\"Sesgo negativo (a la izquierda)\")\n",
    "elif media == mediana == moda:\n",
    "    print(\"Sin sesgo\")\n",
    "else:\n",
    "    print(\"No se puede determinar un sesgo claro\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c320fcc9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hola!\n"
     ]
    }
   ],
   "source": [
    "# 7) Frase que termina en vocal\n",
    "\n",
    "frase = input(\"Ingrese una frase o palabra: \")\n",
    "if frase[-1].lower() in 'aeiou':\n",
    "    print(frase + \"!\")\n",
    "else:\n",
    "    print(frase)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1514e62b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Opciones: \n",
      "1. Mayúsculas\n",
      "2. Minúsculas\n",
      "3. Primera letra en mayúscula\n",
      "aldana\n"
     ]
    }
   ],
   "source": [
    "# 8) Transformar nombre según opción\n",
    "\n",
    "nombre = input(\"Ingrese su nombre: \")\n",
    "print(\"Opciones: \\n1. Mayúsculas\\n2. Minúsculas\\n3. Primera letra en mayúscula\")\n",
    "opcion = input(\"Ingrese el número de opción (1/2/3): \")\n",
    "\n",
    "if opcion == '1':\n",
    "    print(nombre.upper())\n",
    "elif opcion == '2':\n",
    "    print(nombre.lower())\n",
    "elif opcion == '3':\n",
    "    print(nombre.title())\n",
    "else:\n",
    "    print(\"Opción no válida\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f3ed0169",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extremo (puede causar graves daños a gran escala)\n"
     ]
    }
   ],
   "source": [
    "# 9) Clasificación de terremoto\n",
    "\n",
    "magnitud = float(input(\"Ingrese la magnitud del terremoto: \"))\n",
    "if magnitud < 3:\n",
    "    print(\"Muy leve (imperceptible)\")\n",
    "elif magnitud < 4:\n",
    "    print(\"Leve (ligeramente perceptible)\")\n",
    "elif magnitud < 5:\n",
    "    print(\"Moderado (sentido por personas, pero generalmente no causa daños)\")\n",
    "elif magnitud < 6:\n",
    "    print(\"Fuerte (puede causar daños en estructuras débiles)\")\n",
    "elif magnitud < 7:\n",
    "    print(\"Muy fuerte (puede causar daños significativos)\")\n",
    "else:\n",
    "    print(\"Extremo (puede causar graves daños a gran escala)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "51ca24d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Estación del año: Primavera\n"
     ]
    }
   ],
   "source": [
    "# 10) Determinar estación del año según fecha y hemisferio\n",
    "\n",
    "hemisferio = input(\"Ingrese su hemisferio (N/S): \").upper()\n",
    "mes = int(input(\"Ingrese el mes (1-12): \"))\n",
    "dia = int(input(\"Ingrese el día (1-31): \"))\n",
    "\n",
    "if (mes == 12 and dia >= 21) or (1 <= mes <= 2) or (mes == 3 and dia <= 20):\n",
    "    estacion_norte = \"Invierno\"\n",
    "    estacion_sur = \"Verano\"\n",
    "elif (mes == 3 and dia >= 21) or (4 <= mes <= 5) or (mes == 6 and dia <= 20):\n",
    "    estacion_norte = \"Primavera\"\n",
    "    estacion_sur = \"Otoño\"\n",
    "elif (mes == 6 and dia >= 21) or (7 <= mes <= 8) or (mes == 9 and dia <= 20):\n",
    "    estacion_norte = \"Verano\"\n",
    "    estacion_sur = \"Invierno\"\n",
    "elif (mes == 9 and dia >= 21) or (10 <= mes <= 11) or (mes == 12 and dia <= 20):\n",
    "    estacion_norte = \"Otoño\"\n",
    "    estacion_sur = \"Primavera\"\n",
    "else:\n",
    "    estacion_norte = estacion_sur = \"Fecha inválida\"\n",
    "\n",
    "if estacion_norte != \"Fecha inválida\":\n",
    "    if hemisferio == 'N':\n",
    "        print(\"Estación del año:\", estacion_norte)\n",
    "    elif hemisferio == 'S':\n",
    "        print(\"Estación del año:\", estacion_sur)\n",
    "    else:\n",
    "        print(\"Hemisferio no válido\")\n",
    "else:\n",
    "    print(\"Fecha inválida\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
